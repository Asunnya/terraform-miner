{"repo": "GoogleCloudPlatform_magic-modules_1e1917d4", "commit_hash": "2f02fec0584f94f301042189e61d8a498b46d948", "author": "Zhenhua Li", "date": "2024-08-14T08:14:37-07:00", "message": "Fix tgc unit test (#11434)", "file": "mmv1/third_party/cai2hcl/services/resourcemanager/testdata/project_create.tf", "patch": "@@ -8,4 +8,5 @@ resource \"google_project\" \"example-project\" {\n \n   name       = \"My Project\"\n   project_id = \"example-project\"\n+  deletion_policy = \"DELETE\"\n }\n", "head_hash": "19ff13a7b1c35e06ec99167e23e397ad2c3fa8e8"}
{"repo": "GoogleCloudPlatform_magic-modules_1e1917d4", "commit_hash": "53b19f49d326894451282379e814821a542b6664", "author": "edisonhuang-google", "date": "2024-04-01T08:24:28-07:00", "message": "Convert field ExternalIpv6PrefixLength in Cai2Hcl converter for ComputeInstance (#10252)", "file": "mmv1/third_party/cai2hcl/services/compute/testdata/full_compute_instance.tf", "patch": "@@ -83,16 +83,6 @@ resource \"google_compute_instance\" \"test1\" {\n     subnetwork  = \"projects/test-subnetwork_project/regions/us-central1/subnetworks/test-subnetwork\"\n   }\n \n-  network_interface {\n-    ipv6_access_config {\n-      external_ipv6               = \"0000:00000:00000:00000:00000:00000:00000:1\"\n-      external_ipv6_prefix_length = \"96\"\n-      network_tier                = \"PREMIUM\"\n-    }\n-\n-    queue_count = 0\n-  }\n-\n   scheduling {\n     automatic_restart   = true\n     on_host_maintenance = \"test-on_host_maintenance\"\n", "head_hash": "19ff13a7b1c35e06ec99167e23e397ad2c3fa8e8"}
{"repo": "GoogleCloudPlatform_magic-modules_1e1917d4", "commit_hash": "ffca703f0000fc98a5a4695b38af23619b7fcbef", "author": "Amir Romashkin", "date": "2024-01-19T15:01:16-08:00", "message": "Replace manual ComputeForwardingRuleConverter with a generated converter (#9755)\n\n* Add cai2hcl generated converters for 3 Compute resources.\r\n\r\nThese are: BackendService, GlobalBackendService, ForwardingRule.\r\n\r\nThis is the output of cai2hcl provider, commited as is\r\nwithout the generator Ruby code itself, as agreed with\r\nlibrary owners.\r\nReason: limited capacity of the supporting team to\r\nperform code reviews and the future need to port this\r\nsolution to golang as a part of migration to go. As soon\r\nthe staffing and/or migration is done, we will come back\r\nto implement the generated converters as\r\noriginally planned.\r\n\r\n* Split current PR into 3 chunks:\r\n1. Refactor of shared files (Uber Converter)\r\n2. Add ForwardingRuleConverter (generated)\r\n3. Add BackendServiceConverters (generated)\r\n+ ability to match converters by name\r\n\r\nThis commit removes part2 and part3, leaving only part1 in this branch.\r\n\r\n* Fix versions after merge conflict\r\n\r\n* Remove auto-generated code header from FR\r\n\r\n* Remove unused util function\r\n\r\n* Fix merge conflict resolution issue\r\n\r\n* Remove unnecessary result map normalization (will needed later with generated converters)\r\n\r\n* Simplify cai2hcl by reworking UberConverter's as a single ConverterMap.\r\n\r\n1. Rename UberConverter to ConverterMap.\r\n2. Remove ConverterMap's from each API folder and replace them with a single top-level ConverterMap\r\n\r\n* Simplify converters\r\n\r\n* Flatten converter_map.go and use strings as converter names instead of constants.\r\n\r\n* Replace manual ComputeForwardingRuleConverter with a generated one.\r\n\r\n* Remove \"AUTO GENERATED CODE\" header\r\n\r\n* Rename tpg_transport to transport_tpg\r\n\r\n* Add unit test\r\n\r\n* Remove output normalization from ComputeInstance conversion.\r\n\r\n* Update docs\r\n\r\n* Cai2hcl: use MapToCtyValWithSchema for all converters\r\n\r\n+ minor refactor of normalizeFlattenedObj()\r\n\r\n* Minor rename: flattenComputeForwardingRule\r\n\r\n* cai2hcl normalization: recurse over schema instead\r\nof object.\r\n\r\n* Add unit tests for MapToCtyValWithSchema\r\n\r\n* Formatting fix", "file": "mmv1/third_party/cai2hcl/services/compute/testdata/compute_forwarding_rule.tf", "patch": "@@ -1,25 +1,28 @@\n resource \"google_compute_forwarding_rule\" \"test-1\" {\n-  all_ports             = true\n-  allow_global_access   = false\n-  description           = \"test description\"\n-  ip_address            = \"10.128.0.62\"\n-  ip_protocol           = \"TCP\"\n-  load_balancing_scheme = \"INTERNAL_MANAGED\"\n-  name                  = \"test-1\"\n-  network_tier          = \"PREMIUM\"\n-  port_range            = \"80-82\"\n-  region                = \"us-central1\"\n-  subnetwork            = \"projects/myproj/regions/us-central1/subnetworks/default\"\n-  target                = \"projects/myproj/regions/us-central1/targetHttpProxies/test1-target-proxy\"\n+  all_ports              = true\n+  allow_global_access    = false\n+  description            = \"test description\"\n+  ip_address             = \"10.128.0.62\"\n+  ip_protocol            = \"TCP\"\n+  is_mirroring_collector = false\n+  load_balancing_scheme  = \"INTERNAL_MANAGED\"\n+  name                   = \"test-1\"\n+  network_tier           = \"PREMIUM\"\n+  port_range             = \"80-82\"\n+  region                 = \"us-central1\"\n+  subnetwork             = \"projects/myproj/regions/us-central1/subnetworks/default\"\n+  target                 = \"projects/myproj/regions/us-central1/targetHttpProxies/test1-target-proxy\"\n }\n \n resource \"google_compute_forwarding_rule\" \"test-2\" {\n-  backend_service       = \"projects/myproj/regions/us-central1/backendServices/test-bs-1\"\n-  ip_address            = \"projects/myproj/regions/us-central1/addresses/test-ip-1\"\n-  ip_protocol           = \"TCP\"\n-  ip_version            = \"IPV6\"\n-  load_balancing_scheme = \"EXTERNAL\"\n-  name                  = \"test-2\"\n-  ports                 = [\"80\", \"81\"]\n-  region                = \"us-central1\"\n+  all_ports              = false\n+  allow_global_access    = false\n+  backend_service        = \"projects/myproj/regions/us-central1/backendServices/test-bs-1\"\n+  ip_address             = \"projects/myproj/regions/us-central1/addresses/test-ip-1\"\n+  ip_protocol            = \"TCP\"\n+  is_mirroring_collector = false\n+  load_balancing_scheme  = \"EXTERNAL\"\n+  name                   = \"test-2\"\n+  ports                  = [\"80\", \"81\"]\n+  region                 = \"us-central1\"\n }\n", "head_hash": "19ff13a7b1c35e06ec99167e23e397ad2c3fa8e8"}
{"repo": "GoogleCloudPlatform_magic-modules_1e1917d4", "commit_hash": "ddc054c826c23b8d0bf39273fb71c4c32b038740", "author": "Amir Romashkin", "date": "2024-01-02T16:06:01-08:00", "message": "Cai2Hcl: refactor of converter_map and split of utils.go (#9378)\n\n* Add cai2hcl generated converters for 3 Compute resources.\r\n\r\nThese are: BackendService, GlobalBackendService, ForwardingRule.\r\n\r\nThis is the output of cai2hcl provider, commited as is\r\nwithout the generator Ruby code itself, as agreed with\r\nlibrary owners.\r\nReason: limited capacity of the supporting team to\r\nperform code reviews and the future need to port this\r\nsolution to golang as a part of migration to go. As soon\r\nthe staffing and/or migration is done, we will come back\r\nto implement the generated converters as\r\noriginally planned.\r\n\r\n* Split current PR into 3 chunks:\r\n1. Refactor of shared files (Uber Converter)\r\n2. Add ForwardingRuleConverter (generated)\r\n3. Add BackendServiceConverters (generated)\r\n+ ability to match converters by name\r\n\r\nThis commit removes part2 and part3, leaving only part1 in this branch.\r\n\r\n* Fix versions after merge conflict\r\n\r\n* Remove auto-generated code header from FR\r\n\r\n* Remove unused util function\r\n\r\n* Fix merge conflict resolution issue\r\n\r\n* Remove unnecessary result map normalization (will needed later with generated converters)\r\n\r\n* Simplify cai2hcl by reworking UberConverter's as a single ConverterMap.\r\n\r\n1. Rename UberConverter to ConverterMap.\r\n2. Remove ConverterMap's from each API folder and replace them with a single top-level ConverterMap\r\n\r\n* Simplify converters\r\n\r\n* Flatten converter_map.go and use strings as converter names instead of constants.", "file": "mmv1/third_party/cai2hcl/services/compute/testdata/full_compute_forwarding_rule.tf", "patch": "", "head_hash": "19ff13a7b1c35e06ec99167e23e397ad2c3fa8e8"}
{"repo": "GoogleCloudPlatform_magic-modules_1e1917d4", "commit_hash": "b19359c24c227fc23bc51e2270a913c669e2731a", "author": "Shuya Ma", "date": "2023-09-13T14:15:22-07:00", "message": "resolve conflicts", "file": ".ci/infra/terraform/main.tf", "patch": "@@ -241,6 +241,7 @@ module \"project-services\" {\n     \"firebasestorage.googleapis.com\",\n     \"firestore.googleapis.com\",\n     \"firestorekeyvisualizer.googleapis.com\",\n+    \"gameservices.googleapis.com\",\n     \"gkebackup.googleapis.com\",\n     \"gkeconnect.googleapis.com\",\n     \"gkehub.googleapis.com\",\n", "head_hash": "19ff13a7b1c35e06ec99167e23e397ad2c3fa8e8"}
{"repo": "GoogleCloudPlatform_magic-modules_1e1917d4", "commit_hash": "a8cc8aaaa5bae4f601c9d92ab2376afa00336410", "author": "Shuya Ma", "date": "2023-09-05T21:20:02-07:00", "message": "resolve conflicts", "file": ".ci/infra/terraform/main.tf", "patch": "@@ -241,6 +241,7 @@ module \"project-services\" {\n     \"firebasestorage.googleapis.com\",\n     \"firestore.googleapis.com\",\n     \"firestorekeyvisualizer.googleapis.com\",\n+    \"gameservices.googleapis.com\",\n     \"gkebackup.googleapis.com\",\n     \"gkeconnect.googleapis.com\",\n     \"gkehub.googleapis.com\",\n", "head_hash": "19ff13a7b1c35e06ec99167e23e397ad2c3fa8e8"}
{"repo": "GoogleCloudPlatform_magic-modules_1e1917d4", "commit_hash": "9750a6438418bb2fcf4a4ffbc58c3bf705df369a", "author": "Shuya Ma", "date": "2023-08-23T13:01:40-07:00", "message": "resolve conflicts", "file": ".ci/infra/terraform/main.tf", "patch": "@@ -241,6 +241,7 @@ module \"project-services\" {\n     \"firebasestorage.googleapis.com\",\n     \"firestore.googleapis.com\",\n     \"firestorekeyvisualizer.googleapis.com\",\n+    \"gameservices.googleapis.com\",\n     \"gkebackup.googleapis.com\",\n     \"gkeconnect.googleapis.com\",\n     \"gkehub.googleapis.com\",\n", "head_hash": "19ff13a7b1c35e06ec99167e23e397ad2c3fa8e8"}
